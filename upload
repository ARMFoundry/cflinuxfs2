#!/usr/bin/env ruby

require "aws/s3"

STACK_NAME = ARGV[0]
FILE= "#{STACK_NAME}/rootfs.tgz"
ENVIRONMENT = ARGV.include?("--latest") ? "latest" : "dev"
AWS_ID = ENV['AMAZON_ACCESS_KEY_ID']
AWS_KEY = ENV['AMAZON_SECRET_ACCESS_KEY']
BUCKET_NAME = "cfstacks"

raise "Usage: upload <stack_name> (e.g. lucid64)" unless STACK_NAME
raise "rootfs file not found: #{FILE}" unless File.exists?(FILE)


AWS::S3::Base.establish_connection!(
  :access_key_id => AWS_ID,
  :secret_access_key => AWS_KEY
)

begin
  AWS::S3::Bucket.find(BUCKET_NAME)
rescue AWS::S3::AccessDenied
  puts "Access denied, please set AMAZON_ACCESS_KEY_ID and AMAZON_SECRET_ACCESS_KEY like so:"
  puts "export AMAZON_ACCESS_KEY_ID=", "export AMAZON_SECRET_ACCESS_KEY="
  exit
end

SIZE = File.size(FILE) / (1024 * 1024)
puts "Uploading #{FILE} (#{SIZE}M)"

AWS::S3::S3Object.store("#{STACK_NAME}.#{ENVIRONMENT}.tgz", File.open(FILE), BUCKET_NAME)
